/***********************************************
 *  Premium Unlock Script - Locket & RevenueCat
 *  üõ†Ô∏è By ThanhQuan | Build: V1.0.2 (2025-09-26)
 ***********************************************/

// =================== [PH·∫¶N 1] - X√ìA HEADER =================== //
// üëâ M·ª•c ƒë√≠ch: x√≥a header "X-RevenueCat-ETag" ƒë·ªÉ tr√°nh b·ªã ph√°t hi·ªán cache

function setHeaderValue(headers, key, value) {
  const lowerKey = key.toLowerCase();
  if (lowerKey in headers) {
    headers[lowerKey] = value;
  } else {
    headers[key] = value;
  }
}

// N·∫øu script ch·∫°y khi g·ª≠i request
if (typeof $request !== "undefined") {
  let modifiedHeaders = $request.headers;
  setHeaderValue(modifiedHeaders, "X-RevenueCat-ETag", "");
  $done({ headers: modifiedHeaders });
}

// =================== [PH·∫¶N 2] - S·ª¨A RESPONSE =================== //
// üëâ M·ª•c ƒë√≠ch: gi·∫£ l·∫≠p thu√™ bao Premium / Gold ƒë·ªÉ m·ªü kh√≥a ·ª©ng d·ª•ng

if (typeof $response !== "undefined") {
  // L·∫•y User-Agent ƒë·ªÉ x√°c ƒë·ªãnh ·ª©ng d·ª•ng g·ªçi API RevenueCat
  const ua = $request.headers["User-Agent"] || $request.headers["user-agent"];

  // Parse body JSON t·ª´ ph·∫£n h·ªìi g·ªëc c·ªßa RevenueCat
  let obj = JSON.parse($response.body);

  // Th√™m th√¥ng ƒëi·ªáp c√° nh√¢n (kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn logic)
  obj.Attention = "üéâ Script unlock Premium by ThanhQuan ‚Äì Kh√¥ng chia s·∫ª c√¥ng khai!";

  // =================== THU√ä BAO GI·∫¢ =================== //
  const thanhquanSubscription = {
    is_sandbox: false,                       // Kh√¥ng ph·∫£i m√¥i tr∆∞·ªùng test
    ownership_type: "PURCHASED",             // ‚úÖ ƒê√£ mua g√≥i
    billing_issues_detected_at: null,
    period_type: "normal",                   // G√≥i thu√™ bao chu·∫©n
    expires_date: "2099-12-18T01:04:17Z",   // ‚è∞ H·∫øt h·∫°n r·∫•t xa (2099)
    grace_period_expires_date: null,
    unsubscribe_detected_at: null,
    original_purchase_date: "2025-09-26T01:04:18Z", // üìÖ Ng√†y mua ban ƒë·∫ßu (m·ªõi nh·∫•t)
    purchase_date: "2025-09-26T01:04:17Z",          // üìÖ Ng√†y mua (m·ªõi nh·∫•t)
    store: "app_store"                      // Ngu·ªìn mua: App Store
  };

  // =================== ENTITLEMENT GI·∫¢ =================== //
  const thanhquanEntitlement = {
    grace_period_expires_date: null,
    purchase_date: "2025-09-26T01:04:17Z",           // üìÖ Ng√†y mua
    product_identifier: "com.ohoang7.premium.yearly", // ‚ö†Ô∏è GI·ªÆ NGUY√äN ƒë·ªÉ ƒë·∫£m b·∫£o t∆∞∆°ng th√≠ch
    expires_date: "2099-12-18T01:04:17Z"
  };

  // =================== √ÅNH X·∫† ·ª®NG D·ª§NG =================== //
  const mapping = {
    "%E8%BD%A6%E7%A5%A8%E7%A5%A8": ["vip+watch_vip"], // App Trung Qu·ªëc
    "Locket": ["Gold"]                                // App Locket
  };

  // Ki·ªÉm tra xem User-Agent c√≥ ch·ª©a chu·ªói ·ª©ng d·ª•ng n√†o kh√¥ng
  const matchedApp = Object.keys(mapping).find(key => ua.includes(key));

  if (matchedApp) {
    // N·∫øu tr√πng kh·ªõp ‚Üí √°nh x·∫° entitlement t∆∞∆°ng ·ª©ng
    const [entitlementName, productID] = mapping[matchedApp];

    if (productID) {
      thanhquanEntitlement.product_identifier = productID;
      obj.subscriber.subscriptions[productID] = thanhquanSubscription;
    } else {
      obj.subscriber.subscriptions["com.ohoang7.premium.yearly"] = thanhquanSubscription;
    }

    // G√°n quy·ªÅn truy c·∫≠p Premium cho app
    obj.subscriber.entitlements[entitlementName] = thanhquanEntitlement;

  } else {
    // N·∫øu kh√¥ng kh·ªõp ·ª©ng d·ª•ng n√†o ‚Üí d√πng m·∫∑c ƒë·ªãnh l√† "pro"
    obj.subscriber.subscriptions["com.ohoang7.premium.yearly"] = thanhquanSubscription;
    obj.subscriber.entitlements["pro"] = thanhquanEntitlement;
  }

  // Tr·∫£ l·∫°i JSON ƒë√£ ch·ªânh s·ª≠a cho ·ª©ng d·ª•ng
  $done({ body: JSON.stringify(obj) });
}
