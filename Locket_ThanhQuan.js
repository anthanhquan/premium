/***********************************************
 *  Premium Unlock Script - Locket & RevenueCat
 *  üõ†Ô∏è By Th√†nh Qu√¢n
 *  üìå Version: V1.0.2 (Clean & Optimized)
 ***********************************************/

// =================== [PH·∫¶N 1] - X√ìA HEADER =================== //
// M·ª•c ƒë√≠ch: x√≥a header "X-RevenueCat-ETag" ƒë·ªÉ tr√°nh b·ªã ph√°t hi·ªán

function setHeaderValue(headers, key, value) {
  const lowerKey = key.toLowerCase();
  if (lowerKey in headers) {
    headers[lowerKey] = value;
  } else {
    headers[key] = value;
  }
}

// N·∫øu script ƒë∆∞·ª£c g·ªçi khi g·ª≠i request
if (typeof $request !== "undefined") {
  let modifiedHeaders = $request.headers;
  setHeaderValue(modifiedHeaders, "X-RevenueCat-ETag", "");
  $done({ headers: modifiedHeaders });
}

// =================== [PH·∫¶N 2] - S·ª¨A RESPONSE =================== //
// M·ª•c ƒë√≠ch: gi·∫£ l·∫≠p thu√™ bao Premium / Gold ƒë·ªÉ m·ªü kh√≥a app

if (typeof $response !== "undefined") {
  // L·∫•y User-Agent t·ª´ request ƒë·ªÉ x√°c ƒë·ªãnh ·ª©ng d·ª•ng
  const ua = $request.headers["User-Agent"] || $request.headers["user-agent"];

  // Parse body JSON t·ª´ ph·∫£n h·ªìi g·ªëc c·ªßa RevenueCat
  let obj = JSON.parse($response.body);

  // Th√™m th√¥ng ƒëi·ªáp c√° nh√¢n (kh√¥ng ·∫£nh h∆∞·ªüng ƒë·∫øn app)
  obj.Attention = "üéâ Ch√∫c m·ª´ng b·∫°n! Script by Th√†nh Qu√¢n.";

  // ƒê·ªëi t∆∞·ª£ng thu√™ bao gi·∫£ (subscription info)
  const subscriptionInfo = {
    is_sandbox: false,
    ownership_type: "PURCHASED",             // ‚úÖ ƒê√£ mua
    billing_issues_detected_at: null,
    period_type: "normal",                   // G√≥i thu√™ bao th∆∞·ªùng
    expires_date: "2099-12-18T01:04:17Z",   // üî• H·∫øt h·∫°n xa trong t∆∞∆°ng lai
    grace_period_expires_date: null,
    unsubscribe_detected_at: null,
    original_purchase_date: "2024-07-28T01:04:18Z",
    purchase_date: "2024-07-28T01:04:17Z",
    store: "app_store"                       // Mua t·ª´ App Store
  };

  // ƒê·ªëi t∆∞·ª£ng entitlement (quy·ªÅn truy c·∫≠p)
  const entitlementInfo = {
    grace_period_expires_date: null,
    purchase_date: "2024-07-28T01:04:17Z",
    product_identifier: "com.thanhquan.premium.yearly",  // ‚úÖ ƒë·ªïi t√™n s·∫°ch
    expires_date: "2099-12-18T01:04:17Z"
  };

  // B·∫£ng √°nh x·∫°: x√°c ƒë·ªãnh entitlement theo ·ª©ng d·ª•ng (User-Agent)
  const mapping = {
    "%E8%BD%A6%E7%A5%A8%E7%A5%A8": ["vip+watch_vip"], // App Trung Qu·ªëc
    "Locket": ["Gold"]                               // App Locket
  };

  // Ki·ªÉm tra ·ª©ng d·ª•ng hi·ªán t·∫°i b·∫±ng c√°ch so kh·ªõp chu·ªói trong User-Agent
  const matchedApp = Object.keys(mapping).find(key => ua.includes(key));

  if (matchedApp) {
    // N·∫øu c√≥ kh·ªõp trong b·∫£ng √°nh x·∫°
    const [entitlementName, productID] = mapping[matchedApp];

    if (productID) {
      // G√°n g√≥i thu√™ bao theo product ID ƒë∆∞·ª£c √°nh x·∫°
      entitlementInfo.product_identifier = productID;
      obj.subscriber.subscriptions[productID] = subscriptionInfo;
    } else {
      // N·∫øu kh√¥ng c√≥ product ID c·ª• th·ªÉ, d√πng m·∫∑c ƒë·ªãnh
      obj.subscriber.subscriptions["com.thanhquan.premium.yearly"] = subscriptionInfo;
    }

    // G√°n entitlement (quy·ªÅn s·ª≠ d·ª•ng t√≠nh nƒÉng cao c·∫•p)
    obj.subscriber.entitlements[entitlementName] = entitlementInfo;

  } else {
    // N·∫øu kh√¥ng kh·ªõp app n√†o ‚Üí d√πng gi√° tr·ªã m·∫∑c ƒë·ªãnh l√† "pro"
    obj.subscriber.subscriptions["com.thanhquan.premium.yearly"] = subscriptionInfo;
    obj.subscriber.entitlements["pro"] = entitlementInfo;
  }

  // Tr·∫£ v·ªÅ ph·∫£n h·ªìi ƒë√£ ch·ªânh s·ª≠a cho ·ª©ng d·ª•ng
  $done({ body: JSON.stringify(obj) });
}
